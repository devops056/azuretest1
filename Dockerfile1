FROM nginx:1.13.11-alpine

RUN apk add --no-cache openssl

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
&& tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
&& rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

CMD ["dockerize", "-template", "/etc/nginx/nginx.tmpl:/etc/nginx/nginx.conf", "nginx", "-g", "daemon off;"]

# base image
FROM node:12.2.0

# install chrome for protractor tests
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
RUN apt-get update && apt-get install -yq google-chrome-stable

# set working directory
WORKDIR /app
COPY package*.json ./

# add `/app/node_modules/.bin` to $PATH
ENV PATH /app/node_modules/.bin:$PATH

# install and cache app dependencies

RUN npm install
RUN npm install -g @angular/cli@7.3.9

# add app
COPY . /app

# start app
CMD ng serve --host 0.0.0.0

# add app
COPY /nginx_file/node.gaurangacharya.co.conf /etc/nginx/sites_available/
COPY /nginx_file/angular.gaurangacharya.co.conf /etc/nginx/sites_enable/
COPY /nginx_file/node.gaurangacharya.co.conf /etc/nginx/sites_available/
COPY /nginx_file/angular.gaurangacharya.co.conf /etc/nginx/sites_enable/

# Serve the app
CMD ["npm", "run", "server"]

# restart  nginx 
CMD sudo service nginx restart

# EXPOSE PORT
 EXPOSE 80
 EXPOSE 443
